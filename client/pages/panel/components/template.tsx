
import { ReactNode, useEffect, useRef, useState } from 'react'
import Head from 'next/head'
import { ChevronDown, List } from 'react-bootstrap-icons';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useUser } from '@/context/userContext';
import { readJwtCookie, removeJwtCookie } from '@/lib/utils/userUtils';
import { useContacts } from '@/context/contactsContext';

const PanelTemplate: React.FC<{
    children: ReactNode,
    tabName: string
}> = ({ children, tabName }) => {
    const router = useRouter();
    const currentPath = router.pathname;

    // User context
    const { userData, setUserData } = useUser();
    // User Contacts context
    const { setUserContacts } = useContacts();


    // Decode jwt and login if token is still there
    useEffect(() => {
        const info = readJwtCookie();
        if (info && info.roles && info.roles.length > 0) {
            setUserData(info);
        } else {
            router.push('/panel/giris');
        }
    }, []);

    // Logout function
    // Empties the user context and removes the cookie
    const handleSignOut = () => {
        setUserData(null);
        removeJwtCookie();
        setUserContacts([]);
        // If facebook is connected, logout from FB aswell
        try {
            window.FB.getLoginStatus(function (response: any) {
                if (response.status === 'connected') {
                    window.FB.logout();
                }
            });
        } catch (e) { }
        router.push('/');
    }

    // User menu drop down
    const [userMenuActive, setUserMenuActive] = useState(false);

    // Handle clicking outside user-menu
    useEffect(() => {
        const handleDocumentClick = (e: any) => {
            // Check if the click target is outside of the user-menu dropdown div and user-menu button
            if (userMenuActive
                && !e.target.closest('.admin-container')
                && !e.target.closest('.user-menu-button')) {
                setUserMenuActive(false);
            }
        };

        // Record clicks
        document.addEventListener("click", handleDocumentClick);

        return () => {
            document.removeEventListener("click", handleDocumentClick);
        };
    }, [userMenuActive]);

    const [drawerActive, setDrawerActive] = useState(false);

    return (
        <>
            <Head>
                <title>ZanaatHan Admin</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className='panel-page'>
                <div className={`panel-nav-container ${drawerActive ? 'active' : ''}`} onClick={() => setDrawerActive(!drawerActive)}>
                    <nav className='panel-nav' onClick={(e) => e.stopPropagation()}>
                        <h2 className='nav-logo'>Zanaat.Han Admin</h2>
                        <ul>
                            <li className={`${currentPath === '/panel/onay-bekleyenler' ? 'active' : ''}`}>
                                <Link href={'/panel/onay-bekleyenler'}>Onay bekleyenler</Link>
                            </li>
                            <li className={`${currentPath === '/panel/kullanicilar' ? 'active' : ''}`}>
                                <Link href={'/panel/kullanicilar'}>Kullanıcıları yönet</Link>
                            </li>
                            <li className={`${currentPath === '/panel/raporlar' ? 'active' : ''}`}>
                                <Link href={'/panel/raporlar'}>Raporlar</Link>
                            </li>
                            <li className={`${currentPath === '/panel/admin' ? 'active' : ''}`}>
                                <Link href={'/panel/admin'}>Hesap</Link>
                            </li>
                        </ul>
                    </nav>
                </div>
                <div className='panel'>
                    <header>
                        <button type='button' className='drawer-button' onClick={() => setDrawerActive(true)}>
                            <List />
                        </button>
                        <h2 className='tab-name'>{tabName}</h2>
                        <div className="admin-container">
                            <button type="button" className='user-menu-button' onClick={() => setUserMenuActive(!userMenuActive)}>
                                <span>{userData?.username}</span>
                                <ChevronDown />
                            </button>
                            <div className={`user-menu ${userMenuActive ? 'active' : ''}`}>
                                <ul className='user-menu-list'>
                                    <li><Link href={'/'}>Siteye dön</Link></li>
                                </ul>
                                <button type='button' className='sign-out-button' onClick={handleSignOut}>Çıkış yap</button>
                            </div>
                        </div>
                    </header>
                    <main>
                        <h2 className='tab-name'>{tabName}</h2>
                        {children}
                    </main>
                </div>
            </div>
        </>
    );
}

export default PanelTemplate;